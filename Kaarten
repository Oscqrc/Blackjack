using System;

namespace Kaarten
{
    class Program
    {
        static void Main(string[] args)
        {
            Deck deck1 = new Deck();
            deck1.Shuffle();
            for (int i = 0; i < 52; i++)
            {
                Console.Write("{0,-19}", deck1.DealCard());
                if ((i + 1) % 4 == 0)
                    Console.WriteLine();
            }
            Console.ReadLine();
        }
    }
}

namespace Kaarten
{
    class Program
    {
        static void Main(string[] args)
        {
            Deck deck1 = new Deck();
            deck1.Shuffle();
            for (int i = 0; i < 52; i++)
            {
                Console.Write("{0,-19}", deck1.DealCard());
                if ((i + 1) % 4 == 0)
                    Console.WriteLine();
            }
            Console.ReadLine();
        }
    }
}

namespace Kaarten
{
    public class Deck
    {
        private Card[] deck;
        private int currentcard;
        private int NUMBERS_OF_CARDS = 52;
        private Random ranNum;

        public Deck()
        {
            string[] faces = {"Ace","Two","Three","Four","Five","Six","Six","Seven","Eight","Nine"
                    ,"Ten","Jack","Queen","King"};
            string[] suits = { "Hearts", "Clubs", "Diamonds", "Spades" };
            deck = new Card[NUMBERS_OF_CARDS];
            currentcard = 0;
            ranNum = new Random();
            for (int count = 0; count < deck.Length; count++)
                deck[count] = new Card(faces[count % 13], suits[count / 13]);

        }
        public void Shuffle()
        {
            currentcard = 0;
            for (int first = 0; first < deck.Length; first++)
            {
                int second = ranNum.Next(NUMBERS_OF_CARDS);
                Card temp = deck[first];
                deck[first] = deck[second];
                deck[second] = temp;
            }
                
        }
        public Card DealCard()
        {
            if (currentcard < deck.Length)
                return deck[currentcard++];
            else
                return null;
        }
    }
}

